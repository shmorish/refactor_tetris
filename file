=================================================================
==37220==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000102f00451 at pc 0x000100339cc4 bp 0x00016facaf30 sp 0x00016facaf28
READ of size 1 at 0x000102f00451 thread T0
    #0 0x100339cc0 in print_table print_table.c:40
    #1 0x100338a28 in do_tetris do_tetris.c:8
    #2 0x10033b044 in main tetris.c:22
    #3 0x197c8ff24  (<unknown module>)

0x000102f00451 is located 0 bytes to the right of 1-byte region [0x000102f00450,0x000102f00451)
allocated by thread T0 here:
    #0 0x100719dc8 in wrap_strdup+0x1c4 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x3ddc8) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x100338fd8 in mino_alloc mino.c:91
    #2 0x100339288 in generate_mino mino.c:106
    #3 0x1003389ac in do_tetris do_tetris.c:7
    #4 0x10033b044 in main tetris.c:22
    #5 0x197c8ff24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow print_table.c:40 in print_table
Shadow bytes around the buggy address:
  0x007020600030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020600040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020600050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020600060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020600070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x007020600080: fa fa 01 fa fa fa 03 fa fa fa[01]fa fa fa fd fa
  0x007020600090: fa fa 00 07 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x0070206000a0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x0070206000b0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x0070206000c0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
  0x0070206000d0: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==37220==ABORTING
